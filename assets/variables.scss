// Ref: https://github.com/nuxt-community/vuetify-module#customvariables
//
// The variables you want to modify
// $font-size-root: 20px;
@use 'sass:map';
/*
@font-face {
  font-family: 'Playfair Display', serif;
  src: url('/fonts/PlayfairDisplay-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 1000;
  font-style: normal;
}
@font-face {
  font-family: 'Playfair Display', serif;
  src: url('/fonts/PlayfairDisplay-Italic-VariableFont_wght.ttf')
    format('truetype');
  font-weight: 100 1000;
  font-style: italic;
}
@font-face {
  font-family: 'Urbanist', sans-serif;
  src: url('/fonts/Urbanist-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 1000;
  font-style: normal;
}
@font-face {
  font-family: 'Urbanist', sans-serif;
  src: url('/fonts/Urbanist-Italic-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 1000;
  font-style: italic;
} */

/* @font-face {
  font-family: 'Heebo', sans-serif;
  src: url('/assets/fonts/Heebo-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 900;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-ExtraLight.ttf') format('truetype');
  font-weight: 200;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-ExtraLightItalic.ttf') format('truetype');
  font-weight: 200;
  font-style: italic;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-Light.ttf') format('truetype');
  font-weight: 300;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-LightItalic.ttf') format('truetype');
  font-weight: 300;
  font-style: italic;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-Italic.ttf') format('truetype');
  font-weight: 400;
  font-style: italic;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-SemiBold.ttf') format('truetype');
  font-weight: 600;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-SemiBoldItalic.ttf') format('truetype');
  font-weight: 600;
  font-style: italic;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-Bold.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-BoldItalic.ttf') format('truetype');
  font-weight: 700;
  font-style: italic;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-Black.ttf') format('truetype');
  font-weight: 900;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro', sans-serif;
  src: url('/assets/SourceSansPro-BlackItalic.ttf') format('truetype');
  font-weight: 900;
  font-style: italic;
} */

$spacer: 8px !default;
$body-font-family: 'Heebo', sans-serif;
$heading-font-family: 'Heebo', sans-serif;
$h1-font-family: 'Heebo', sans-serif;

$font-weights: (
  'thin': 100,
  'light': 300,
  'regular': 400,
  'medium': 600,
  'bold': 700,
  'black': 900,
);

$btn-font-sizes: (
  'x-small': 0.625rem,
  'small': 0.75rem,
  'default': 0.975rem,
  'large': 1.075rem,
  'x-large': 1.2rem,
);

$headings: (
  'h1': (
    'size': 4.2rem,
    'weight': 900,
    'line-height': 1,
    'letter-spacing': 0,
    'font-family': $h1-font-family,
    'text-transform': false,
  ),
  'h2': (
    'size': 3rem,
    'weight': 900,
    'line-height': 3rem,
    'letter-spacing': -0.0083333333em,
    'font-family': $heading-font-family,
    'text-transform': false,
  ),
  'h3': (
    'size': 3rem,
    'weight': 400,
    'line-height': 3.125rem,
    'letter-spacing': normal,
    'font-family': $heading-font-family,
    'text-transform': false,
  ),
  'h4': (
    'size': 2.125rem,
    'weight': 400,
    'line-height': 2.5rem,
    'letter-spacing': 0.0073529412em,
    'font-family': $heading-font-family,
    'text-transform': false,
  ),
  'h5': (
    'size': 1.4rem,
    'weight': 400,
    'line-height': 2rem,
    'letter-spacing': normal,
    'font-family': $body-font-family,
    'text-transform': false,
  ),
  'h6': (
    'size': 1.18rem,
    'weight': 400,
    'line-height': 2rem,
    'letter-spacing': 0.0125em,
    'font-family': $body-font-family,
    'text-transform': false,
  ),
  'subtitle-1': (
    'size': 1rem,
    'weight': normal,
    'line-height': 1.75rem,
    'letter-spacing': 0.009375em,
    'font-family': $body-font-family,
    'text-transform': false,
  ),
  'subtitle-2': (
    'size': 0.875rem,
    'weight': 500,
    'line-height': 1.375rem,
    'letter-spacing': 0.0071428571em,
    'font-family': $body-font-family,
    'text-transform': false,
  ),
  'body-1': (
    'size': 1rem,
    'weight': 400,
    'line-height': 1.5rem,
    'letter-spacing': 0.03125em,
    'font-family': $body-font-family,
    'text-transform': false,
  ),
  'body-2': (
    'size': 0.875rem,
    'weight': 400,
    'line-height': 1.25rem,
    'letter-spacing': 0.0178571429em,
    'font-family': $body-font-family,
    'text-transform': false,
  ),
  'button': (
    'size': 0.875rem,
    'weight': 500,
    'line-height': 2.25rem,
    'letter-spacing': 0.0892857143em,
    'font-family': $heading-font-family,
    'text-transform': uppercase,
  ),
  'caption': (
    'size': 0.75rem,
    'weight': 400,
    'line-height': 1.25rem,
    'letter-spacing': 0.0333333333em,
    'font-family': $body-font-family,
    'text-transform': false,
  ),
  'overline': (
    'size': 0.75rem,
    'weight': 500,
    'line-height': 2rem,
    'letter-spacing': 0.1666666667em,
    'font-family': $body-font-family,
    'text-transform': uppercase,
  ),
);

$grid-breakpoints: (
  'xs': 0,
  'sm': 600px,
  'md': 960px,
  'lg': 1280px - 16px,
  'xl': 1920px - 16px,
);

$container-max-widths: (
  'md': map.get($grid-breakpoints, 'md') * 0.975,
  'lg': map.get($grid-breakpoints, 'lg') * 0.975,
  'xl': map.get($grid-breakpoints, 'lg') * 0.975,
);
